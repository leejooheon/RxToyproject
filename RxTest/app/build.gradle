plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    kapt {
        correctErrorTypes true
    }

    defaultConfig {
        applicationId "com.example.rxtest"
        minSdkVersion 24
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        buildConfigField("String", "BASE_URL", "\"https://api.github.com\"")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
            signingConfig android.signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation project(path: ':domain')
    implementation project(path: ':data')
    implementation project(path: ':presentation')

    // util
    implementation(Libraries.multidex)
    coreLibraryDesugaring(Libraries.desugar)

    // hilt
    implementation(Libraries.hilt)
    kapt(Libraries.hiltDaggerCompiler)

    // coroutine
    implementation(Libraries.coroutineCore)
    implementation(Libraries.coroutineAndroid)

    // xml component to rx observable
    implementation(Libraries.rxConverter)

    // retrofit
    implementation(Libraries.retrofit)
    implementation(Libraries.retrofitConverter)
    implementation(Libraries.retrofitMock)
    implementation(Libraries.interceptor)
    implementation(Libraries.chuckLogging)
}